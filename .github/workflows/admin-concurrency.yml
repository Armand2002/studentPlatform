name: Admin concurrency tests (Postgres)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  concurrency:
    name: Run Postgres concurrency test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system deps (Debian packages used by some Python wheels)
        run: |
          sudo apt-get update && sudo apt-get install -y build-essential libpq-dev

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do pg_isready -h localhost -p 5432 -U postgres && break || sleep 1; done

      - name: Export DATABASE_URL
        run: echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV

      - name: Run Alembic migrations
        working-directory: backend
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          alembic upgrade head

      - name: Run Postgres concurrency test
        working-directory: backend
        env:
          RUN_PG_TESTS: '1'
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: |
          pytest -q tests/test_admin_concurrency.py -q
